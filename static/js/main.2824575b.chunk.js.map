{"version":3,"sources":["home/shoppingcart.svg","home/avatar.jpg","home/email.svg","home/home.js","constants/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","handleButtonClick","url","window","open","state","className","src","Avatar","type","onClick","this","bind","CartIcon","EmailIcon","href","target","Component","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"yGAAAA,EAAOC,QAAU,IAA0B,0C,kBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,6QCqF5BC,E,YA9EX,aAAc,IAAD,8BACT,+CASHC,kBAAoB,SAACC,GAElBC,OAAOC,KAAKF,EAAK,WAVjB,EAAKG,MAAQ,GAFJ,E,sEAkBT,OACI,yBAAKC,UAAU,uCACX,yBAAKA,UAAU,oBACX,yBAAKC,IAAKC,MACV,yBAAKF,UAAW,UACZ,4BClBI,mBDmBJ,2BClBW,sBDmBX,+BAGR,yBAAKA,UAAU,0CAEX,yBAAKA,UAAU,YACX,4BACAG,KAAK,SACLH,UAAU,mCACVI,QAASC,KAAKV,kBAAkBW,KAAKD,KCpChC,6CDqCJ,yBAAKJ,IAAKM,MAJX,cAQJ,yBAAKP,UAAU,YACX,4BACAG,KAAK,SACLH,UAAU,mCACVI,QAASC,KAAKV,kBAAkBW,KAAKD,KC5ClC,wCD6CF,yBAAKJ,IAAKM,MAJX,YAQJ,yBAAKP,UAAU,YACX,4BACAG,KAAK,SACLH,UAAU,mCACVI,QAASC,KAAKV,kBAAkBW,KAAKD,KCpDhC,4JDqDJ,yBAAKJ,IAAKO,MAJX,cAUR,yBAAKR,UAAU,sCACX,yBAAKA,UAAU,mBACX,4CACA,4BACI,4BAAI,2BCvDX,qCD0DD,6BACA,yBAAKA,UAAU,eACX,4BACI,uDACA,2CAAgB,uBAAGS,KAAK,2BAA2BC,OAAO,UAA1C,4B,GAvEzBC,aEwBJC,E,iLAtBX,OACE,yBAAKZ,UAAU,IACb,yBAAKA,UAAU,yBACb,4BAAQA,UAAU,aAChB,yBAAKA,UAAU,aAKnB,6BAASA,UAAU,IACjB,yBAAKA,UAAU,aACb,8BAEF,yBAAKA,UAAU,IACb,kBAAC,EAAD,a,GAhBMW,aCMZE,EAAcC,QACW,cAA7BjB,OAAOkB,SAASC,UAEe,UAA7BnB,OAAOkB,SAASC,UAEhBnB,OAAOkB,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB5B,QACfsB,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,UAO5BU,MAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,KC1FjEC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDgB1C,SAAkBpB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIoB,IAAIC,iBAAwB7C,OAAOkB,SAASN,MACpDkC,SAAW9C,OAAOkB,SAAS4B,OAIvC,OAGF9C,OAAO+C,iBAAiB,OAAQ,WAC9B,IAAMzB,EAAK,UAAMuB,iBAAN,sBAEP7B,IAgEV,SAAiCM,EAAOC,GAEtCyB,MAAM1B,GACHK,KAAK,SAAAsB,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5C9B,UAAUC,cAAc8B,MAAM5B,KAAK,SAAAC,GACjCA,EAAa4B,aAAa7B,KAAK,WAC7B3B,OAAOkB,SAASuC,aAKpBpC,EAAgBC,EAAOC,KAG1Be,MAAM,WACLJ,QAAQC,IACN,mEArFAuB,CAAwBpC,EAAOC,GAI/BC,UAAUC,cAAc8B,MAAM5B,KAAK,WACjCO,QAAQC,IACN,gHAMJd,EAAgBC,EAAOC,MCtC/BE,K","file":"static/js/main.2824575b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shoppingcart.1c6ca9ca.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar.664e00e7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/email.8f9caefb.svg\";","import React, { Component } from 'react';\nimport './home.css';\nimport Avatar from './avatar.jpg';\nimport * as Constants from '../constants/index.js';\nimport CartIcon from './shoppingcart.svg';\nimport EmailIcon from './email.svg';\nclass Home extends Component {\n    constructor(){\n        super();\n        this.state = {\n\n        }\n        //  this.handleButtonClick = this.handleButtonClick.bind(this);\n    }\n    //javascript code\n\n    // Button click functions.\n     handleButtonClick = (url) => {\n          \n        window.open(url, '_blank');\n     }\n    // end javascript code\n\n    //render method\n    render(){\n        return (\n            <div className=\"jumbotron container content-section\">\n                <div className=\"heading-section \">\n                    <img src={Avatar} />\n                    <div className= \"col-sm\">\n                        <h1>{Constants.COMPANY_NAME}</h1>\n                        <p>{Constants.COMPANY_DESCRIPTION}</p>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"col button-section container div-test2\">\n        \n                    <div className=\"row-sm-4\">\n                        <button \n                        type=\"button\" \n                        className=\"btn btn-primary btn-md btn-block\"\n                        onClick={this.handleButtonClick.bind(this,Constants.PAPARAZZI_URL)}\n                        ><img src={CartIcon} />Paparazzi\n                        </button>\n                    </div>\n                    \n                    <div className=\"row-sm-4\">\n                        <button \n                        type=\"button\" \n                        className=\"btn btn-primary btn-md btn-block\"\n                        onClick={this.handleButtonClick.bind(this,Constants.SHOPIFY_URL)}\n                        ><img src={CartIcon} />Shopify\n                        </button>\n                    </div>\n                    \n                    <div className=\"row-sm-4\">\n                        <button \n                        type=\"button\" \n                        className=\"btn btn-primary btn-md btn-block\"\n                        onClick={this.handleButtonClick.bind(this,Constants.SENDEMAIL_URL)}\n                        ><img src={EmailIcon} />Gmail Me\n                        </button>\n                    </div>\n                    \n\n                </div>\n                <div className=\" row-sm-4 footer-section container\">\n                    <div className=\"contact-section\">\n                        <p>Contact Info:</p>\n                        <ul>\n                            <li><p>{Constants.EMAIL}</p></li>\n                        </ul>\n                    </div>\n                    <br />\n                    <div className=\"my-branding\">\n                        <ul>\n                            <li>Version Info: 82319V1.0</li>\n                            <li>Created By: <a href=\"https://www.group48.com/\" target=\"_blank\">www.group48.com</a></li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default Home;","\n\n// constants file here is where the constants go ';...;' :-]\n\n// home.js BUTTON URL'S\nexport const PAPARAZZI_URL = 'https://paparazziaccessories.com/309168/';\nexport const SHOPIFY_URL = 'http://lindsays-bing.myshopify.com/';\nexport const SENDEMAIL_URL = \"mailto:lindsaysblingythings@gmail.com?subject=Support&body=Hi Lindsay, Please add me to your list to be notified about your next live event! Question: \";\nexport const GROUP_URL = \"https://www.facebook.com/groups/2374329176148044/\";\n// home.js Button Icon's\nexport const CART_ICON = 'src/constants/shoppingcart.svg';\n// home.js heading constants\nexport const COMPANY_NAME = \"Lindsay's Bling\";\nexport const COMPANY_DESCRIPTION = \"Jewelry Consulting\";\n// home.js footer constants\nexport const EMAIL = \"lindsaysblingythings@gmail.com\";\n","import React, { Component } from 'react';\n\n//import logo from './logo.svg';\nimport './App.css';\nimport Home from './home/home';\n\nclass App extends Component {\n  render() {\n    return(\n      <div className=\"\">\n        <div className=\"topheader text-center\">\n          <header className=\"container\">\n            <nav className=\"navbar\">\n                {/* <h2>Imagine your beauty</h2> */}\n            </nav>\n          </header>\n        </div>\n        <section className=\"\">\n          <div className=\"container\">\n            <h1></h1>\n          </div>\n          <div className=\"\">\n            <Home />\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\nserviceWorker.register();\n"],"sourceRoot":""}